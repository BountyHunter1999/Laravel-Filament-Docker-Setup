services:
    app:
        build:
            context: .
            dockerfile: dockerfiles/Dockerfile
            args:
                # Pass both UID and GID to match host user
                HOST_UID: ${UID:-1000}
                HOST_GID: ${GID:-1000}
        volumes:
            - .:/var/www/html
        ports:
            - "8000:80"
        depends_on:
            postgres:
                condition: service_healthy
            mysql:
                condition: service_healthy
            redis:
                condition: service_started

    postgres:
        image: postgres:16-alpine3.19
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
        healthcheck:
            test:
                [
                    "CMD",
                    "pg_isready",
                    "-U",
                    "${DB_USERNAME}",
                    "-d",
                    "${DB_DATABASE}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        volumes:
            - db_data_postgres:/var/lib/postgresql/data
            - ./docker-entrypoint-initdb.d/sample-db.sql:/docker-entrypoint-initdb.d/sample-db.sql
        ports:
            - "5432:5432"

    redis:
        image: redis:alpine
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        ports:
            - "6379:6379"

    mysql:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        volumes:
            - db_data_mysql:/var/lib/mysql
            - ./docker-entrypoint-initdb.d/sample-db.sql:/docker-entrypoint-initdb.d/sample-db.sql
        ports:
            - "3306:3306"

    nginx:
        image: nginx:latest
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html
        depends_on:
            app:
                condition: service_healthy

volumes:
    db_data_postgres:
    db_data_mysql:

networks:
    app_network:
        driver: bridge
